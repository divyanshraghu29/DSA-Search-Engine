b"\nRead problem statements in Mandarin, Bengali, Russian, and Vietnamese as well.\nYou are given a positive integer k and an array a consisting of n integers. You will partition the array into k non-empty segments such that each number belongs to exactly one segment. \nLet's denote s_i as the sum of all numbers belonging to i-th segment after partitioning. Your goal is to maximize the value of min(s_1, \\ldots, s_k). Calculate and print this value.  \nInput Format\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nEach test case contains two lines of input.\nThe first line of each test case contains two space-separated integers n and k.\nThe second line of each test case contains n space-separated integers a_1, \\ldots, a_n.\n\nOutput Format\nFor each test case, print a single line containing a single integer --- the largest value of min(s_1, \\ldots, s_k) you can obtain.\nConstraints\n\n1 \\le T \\le 5 \\cdot 10^4\n2 \\le n \\le 10^5\n1 \\le k \\le n\n-10^9 \\le a_i \\le 10^9\nThe sum of n over all test cases does not exceed 10^5\n\nSubtasks\nSubtask #1 (10 points):\n\nn \\le 400 \nThe sum of n over all test cases does not exceed 400.\n-10^5 \\le a_i \\le 10^5\n\nSubtask #2 (20 points):\n\nn \\le 2000 \nThe sum of n over all test cases does not exceed 4000.\n-10^5 \\le a_i \\le 10^5\n\nSubtask #3 (70 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n5 2\n1 2 3 3 3\n8 5\n7 -6 1 -9 -4 -7 -6 7\n6 3\n-2 6 -2 -3 2 -3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n6\n-7\n-2\n\n\nExplanation\nTest case 1: You can partition the array as [1, 2, 3][3, 3] and obtain min(s_1, s_2) = min(6, 6) = 6.\nTest case 3: You can partition the array as [-2][6, -2, -3][2, -3] and obtain min(s_1, s_2, s_3) = min(-2, 1, -1) = -2.\n\n\n\nAuthor:\n7\xe2\x98\x85bthero\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MXMNSSUM\n\n\nTags:\n\n               \n                 Segment Trees, Fenwick Trees, Coordinate Compression, Dynamic Programming, Greedy, Sorting, Binary Search\n                 \n                     \n                     Advanced Data Structures, Advanced Tree Structures, Advanced Algorithms, Pre processing, Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2953\n\n\nDate Added:\n23-09-2021\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"