b"\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nThere is a building with N floors (numbered 1 through N from bottom to top); on each floor, there are M windows (numbered 1 through M from left to right). Let's denote the j-th window on the i-th floor by (i, j).\nAll windows in the building need to be cleaned one by one in a specific order. You are given this order as a matrix A with N rows and M columns; for each valid i and j, the window (i, j) must be cleaned on the A_{N-i+1,j}-th turn. \nWhenever we clean a window (i, j), it becomes clean, but the dirty water used for cleaning it flows down to windows (i-1, j-1), (i-1, j) and (i-1, j+1) (more precisely, to all of these windows which exist), so these windows become dirty again. Then, the water flows further down, so the same applies for other windows below: whenever a window (i, j) becomes dirty, windows (i-1, j-1), (i-1, j) and (i-1, j+1) become dirty as well. For example, cleaning a window (5, 3) will make the window (3, 2) dirty. The next window is cleaned only after water flows down completely. Note that each window is cleaned only once and there may be dirty windows at the end.\nFor each window, determine whether it will be clean after the cleaning process ends.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers N and M. \nN lines follow. For each i (1 \\le i \\le N), the i-th of these lines contains M space-separated integers A_{i, 1}, A_{i, 2}, \\ldots, A_{i, M}.\n\nOutput\nFor each test case, print N lines; each of them should contain a string with length M. For each valid i and j, the j-th character on the i-th line should be '1' if the window (N-i+1, j) is clean or '0' if it is dirty.\nConstraints\n\n1 \\le T \\le 1,000\n1 \\le N, M \\le 10^3\n1 \\le A_{i, j} \\le N \\cdot M for each valid i, j\nthe elements of the matrix A are pairwise distinct\nthe sum of N \\cdot M over all test cases does not exceed 10^6\n\nSubtasks\nSubtask #1 (50 points):\n\nN, M \\le 25\nthe sum of N \\cdot M over all test cases does not exceed 625\n\nSubtask #2 (50 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n3 4\n1 3 7 10\n9 2 4 11\n8 12 5 6\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1111\n1001\n0100\n\n\n\n\n\nAuthor:\n6\xe2\x98\x85kingofnumbers\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/APARTS\n\n\nTags:\n\n               \n                 deadwing97, dynamic-programming, easy, kingofnumbers, ltime78\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2068\n\n\nDate Added:\n29-11-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"