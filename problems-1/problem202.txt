b'\nRead problem statements in Russian, Bengali, and Mandarin Chinese as well.\nYou are given an undirected graph with N nodes (numbered 1 through N) and M edges. Each edge connects two distinct nodes. However, there may be multiple edges connecting the same pairs of nodes, and they are considered to be distinct edges. A lowercase English letter is written in each node.\nYou are also given a string S with length L. A beautiful path is a sequence of L\xe2\x88\x921 edges such that there is a sequence of L nodes with the following properties:\n\nfor each valid i, the i-th edge connects the i-th and (i+1)-th of these nodes\nfor each valid i, the i-th character of S is written in the i-th of these nodes\n\nThere are no other restrictions \xe2\x80\x94 a path may visit nodes or edges any number of times in any order.\nDetermine the number of beautiful paths in the graph. Since the answer can be very large, compute it modulo 109+7.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains three space-separated integers N, M and L.\nThe second line contains a single string S with length L.\nThe third line contains a single string with length N. For each valid i, the i-th character of the string is the letter written in the i-th node.\nTwo lines follow. The first line contains M integers u1,\xe2\x80\xa6,um. The second lines contains M integers, v1,\xe2\x80\xa6,vm. This denotes that there is an edge connecting nodes ui and to vi. These edges are distinct, even though they may connect the same pair of nodes.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x94 the number of beautiful paths modulo 109+7.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4200\n2\xe2\x89\xa4N\xe2\x89\xa4103\n1\xe2\x89\xa4M\xe2\x89\xa4103\n2\xe2\x89\xa4L\xe2\x89\xa420\nS contains only lowercase English letters\n1\xe2\x89\xa4u,v\xe2\x89\xa4N\nu\xe2\x89\xa0v\n\nSubtasks\nSubtask #1 (100 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n4 4 3\naac\naaca\n1 2 2 1\n2 3 4 2\n2 1 2\naa\naa\n1\n2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n1\n\n\nExplanation\nExample case 1: The three beautiful paths (sequences of edges) are:\n\n(1,2), passing through nodes (1,2,3) in this order\n(4,2), also passing through nodes (1,2,3)\n(3,2), passing through nodes (4,2,3)\n\nExample case 2: There is only one beautiful path, which contains only edge 1. Note that for this path (sequence of edges), there are two valid sequences of nodes: (1,2) and (2,1).\n\n\n\nAuthor:\n4\xe2\x98\x85minh2345\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CODON\n\n\nTags:\n\n               \n                 Graphs, Modular Exponentiation, Bottom-up\n                 \n                     \n                     Data Structures, Mathematics, Modular Arithmetic, Algorithms, Dynamic Programming, DP Approach\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2643\n\n\nDate Added:\n2-01-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'