b"\nVishesh just found an array A having N positive integers. He hates even numbers and would like to make the array full of only odd numbers. To do so, he is allowed to do the following operation.\n\nPick a positive integer X such that X=2Y for some non-negative integer Y. Then, for all elements Ai in A, if Ai is divisible by X, then we divide Ai by X (in other words, we assign Ai\xe2\x86\x90AiX).\n\nLet's define f(B) as the minimum operations required to make an array B have only odd numbers using the operation described above. Find the sum of f(a) over all subarrays a of A.\nNote: A subarray of A is acquired by removing some (possibly none) elements from the beginning and some (possible none) elements from the end of A.\nInput Format\n\nThe first line of each input contains T - the number of test cases. The test cases then follow.\nThe first line of each test case contains an integer N - the size of A.\nThe second line of each test case contains N space-separated integers A1,A2,\xe2\x80\xa6,AN - the array A.\n\nOutput Format\nFor each test case, output on a single line the answer to the problem.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41000\n1\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Ai\xe2\x89\xa4106\nSum of N over all test cases is not more than 5\xe2\x8b\x85105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n3\n1 2 4\n3\n1 2 1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n4\n\n\nExplanation\n\nTest case 1:\n[1] requires 0 operations.\n[1,2] requires 1 operation.\n[1,2,4] requires 2 operations.\n[2] requires 1 operation.\n[2,4] requires 2 operations.\n[4] requires 1 operation.\n\nTherefore, sum of f(a) over all subarrays a of A is 7.\n\nTest case 2:\n[1] requires 0 operations.\n[1,2] requires 1 operation.\n[1,2,1] requires 1 operation.\n[2] requires 1 operation.\n[2,1] requires 1 operation.\n[1] requires 0 operations.\n\nTherefore, sum of f(a) over all subarrays a of A is 4.\n\n\n\nAuthor:\n4\xe2\x98\x85vishesh_s\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MAKEODD\n\n\nTags:\n\n               \n                 bitmasking, bitwise-operation, dynamic-programming, easy-medium, exun2021, math, vishesh_s\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3002\n\n\nDate Added:\n6-01-2022\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"