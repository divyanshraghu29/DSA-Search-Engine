b'\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nYou are given two integers N and K, and an array A of N integers. You have to choose K disjoint non-empty subarrays such that the score is maximized. \nThe score is calculated as follows:\nScore=K\xe2\x88\x91i=1Sum[i]\xe2\x8b\x85i,\nwhere \\mathrm{Sum}[i] denotes sum of elements of i-th subarray. By the i-th subarray, we mean the i-th one in the order from left to right.\nFind the maximum score that can be achieved.\nNote: The subarrays are not required to cover the whole array. It is allowed for some elements of A to belong to none of the subarrays.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers N and K.\nThe second line of each test case contains N space-separated integers A_1,A_2,\\dots,A_N.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the maximum score.\nConstraints\n\n1 \\le T \\le 1000\n1 \\le N \\le 10^5\n1 \\le K \\le \\min(100,N)\n-10^6 \\le A_i \\le 10^6\nThe sum of N over all test cases does not exceed 10^5\n\nSubtasks\n\nSubtask #1 (15 points): K=1\nSubtask #2 (35 points): K=2\nSubtask #3 (50 points): Original constraints\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n5 2\n1 2 -1 3 1\n5 2\n-1 2 11 -23 12\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n11\n37\n\n\nExplanation\n\nTest Case 1: One way to choose 2 disjoint non-empty subarrays is:\n\nS_1 = [1,2] and S_2 = [3,1]\nThe score is 3\\cdot 1 + 4\\cdot 2 =11, which is the maximum possible. \n\nTest Case 2: One way to choose 2 disjoint non-empty subarrays is:\n\nS_1 = [2,11] and S_2 = [12]\nThe score is 13\\cdot 1+12\\cdot 2 = 37, which is the maximum possible.\n\n\n\nAuthor:\n5\xe2\x98\x85cherry0697\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHESUB\n\n\nTags:\n\n               \n                 1D Arrays, Bottom-up, Kadane Algorithm\n                 \n                     \n                     Data Structures, Arrays, Algorithms, Dynamic Programming, DP Approach, Greedy\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2306\n\n\nDate Added:\n29-05-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'