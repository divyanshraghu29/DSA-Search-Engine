b'D2. Kirk and a Binary String (hard version)time limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe only difference between easy and hard versions is the length of the string. You can hack this problem if you solve it. But you can hack the previous problem only if you solve both problems.Kirk has a binary string ss (a string which consists of zeroes and ones) of length n and he is asking you to find a binary string t of the same length which satisfies the following conditions: For any l and r (1?l?r?n) the length of the longest non-decreasing subsequence of the substring slsl+1?sr is equal to the length of the longest non-decreasing subsequence of the substring tltl+1?tr; The number of zeroes in t is the maximum possible.A non-decreasing subsequence of a string p is a sequence of indices i1,i2,?,ik such that i1<i2<?<ik and pi1?pi2???pik. The length of the subsequence is k.If there are multiple substrings which satisfy the conditions, output any.InputThe first line contains a binary string of length not more than 105.OutputOutput a binary string which satisfied the above conditions. If there are many such strings, output any of them.ExamplesInputCopy110, OutputCopy010, InputCopy010, OutputCopy010, InputCopy0001111, OutputCopy0000000, InputCopy0111001100111011101000, OutputCopy0011001100001011101000, NoteIn the first example:  For the substrings of the length 1 the length of the longest non-decreasing subsequnce is 1;  For l=1,r=2 the longest non-decreasing subsequnce of the substring s1s2 is 11 and the longest non-decreasing subsequnce of the substring t1t2 is 01;  For l=1,r=3 the longest non-decreasing subsequnce of the substring s1s3 is 11 and the longest non-decreasing subsequnce of the substring t1t3 is 00;  For l=2,r=3 the longest non-decreasing subsequnce of the substring s2s3 is 1 and the longest non-decreasing subsequnce of the substring t2t3 is 1; The second example is similar to the first one.'