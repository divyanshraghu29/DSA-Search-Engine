b'E. Getting Deals Donetime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputPolycarp has a lot of work to do. Recently he has learned a new time management rule: "if a task takes five minutes or less, do it immediately". Polycarp likes the new rule, however he is not sure that five minutes is the optimal value. He supposes that this value dd should be chosen based on existing task list.Polycarp has a list of nn tasks to complete. The ii-th task has difficulty pipi, i.e. it requires exactly pipi minutes to be done. Polycarp reads the tasks one by one from the first to the nn-th. If a task difficulty is dd or less, Polycarp starts the work on the task immediately. If a task difficulty is strictly greater than dd, he will not do the task at all. It is not allowed to rearrange tasks in the list. Polycarp doesn\'t spend any time for reading a task or skipping it.Polycarp has tt minutes in total to complete maximum number of tasks. But he does not want to work all the time. He decides to make a break after each group of mm consecutive tasks he was working on. The break should take the same amount of time as it was spent in total on completion of these mm tasks.For example, if n=7n=7, p=[3,1,4,1,5,9,2]p=[3,1,4,1,5,9,2], d=3d=3 and m=2m=2 Polycarp works by the following schedule:  Polycarp reads the first task, its difficulty is not greater than dd (p1=3?d=3p1=3?d=3) and works for 33 minutes (i.e. the minutes 11, 22, 33);  Polycarp reads the second task, its difficulty is not greater than dd (p2=1?d=3p2=1?d=3) and works for 11 minute (i.e. the minute 44);  Polycarp notices that he has finished m=2m=2 tasks and takes a break for 3+1=43+1=4 minutes (i.e. on the minutes 5,6,7,85,6,7,8);  Polycarp reads the third task, its difficulty is greater than dd (p3=4>d=3p3=4>d=3) and skips it without spending any time;  Polycarp reads the fourth task, its difficulty is not greater than dd (p4=1?d=3p4=1?d=3) and works for 11 minute (i.e. the minute 99);  Polycarp reads the tasks 55 and 66, skips both of them (p5>dp5>d and p6>dp6>d);  Polycarp reads the 77-th task, its difficulty is not greater than dd (p7=2?d=3p7=2?d=3) and works for 22 minutes (i.e. the minutes 1010, 1111);  Polycarp notices that he has finished m=2m=2 tasks and takes a break for 1+2=31+2=3 minutes (i.e. on the minutes 12,13,1412,13,14). Polycarp stops exactly after tt minutes. If Polycarp started a task but has not finished it by that time, the task is not considered as completed. It is allowed to complete less than mm tasks in the last group. Also Polycarp considers acceptable to have shorter break than needed after the last group of tasks or even not to have this break at all?? his working day is over and he will have enough time to rest anyway.Please help Polycarp to find such value dd, which would allow him to complete maximum possible number of tasks in tt minutes.InputThe first line of the input contains single integer cc (1?c?5?1041?c?5?104)?? number of test cases. Then description of cc test cases follows. Solve test cases separately, test cases are completely independent and do not affect each other.Each test case is described by two lines. The first of these lines contains three space-separated integers nn, mm and tt (1?n?2?105,1?m?2?105,1?t?4?10101?n?2?105,1?m?2?105,1?t?4?1010)?? the number of tasks in Polycarp\'s list, the number of tasks he can do without a break and the total amount of time Polycarp can work on tasks. The second line of the test case contains nn space separated integers p1,p2,?,pnp1,p2,?,pn (1?pi?2?1051?pi?2?105)?? difficulties of the tasks.The sum of values nn for all test cases in the input does not exceed 2?1052?105.OutputPrint cc lines, each line should contain answer for the corresponding test case?? the maximum possible number of tasks Polycarp can complete and the integer value dd (1?d?t1?d?t) Polycarp should use in time management rule, separated by space. If there are several possible values dd for a test case, output any of them.ExamplesInputCopy45 2 165 6 1 4 75 3 305 6 1 4 76 4 1512 5 15 7 20 171 1 50100OutputCopy3 54 72 100 25InputCopy311 1 296 4 3 7 5 3 4 7 3 5 37 1 51 1 1 1 1 1 15 2 182 3 3 7 5OutputCopy4 33 14 5NoteIn the first test case of the first example n=5n=5, m=2m=2 and t=16t=16. The sequence of difficulties is [5,6,1,4,7][5,6,1,4,7]. If Polycarp chooses d=5d=5 then he will complete 33 tasks. Polycarp will work by the following schedule:  Polycarp reads the first task, its difficulty is not greater than dd (p1=5?d=5p1=5?d=5) and works for 55 minutes (i.e. the minutes 1,2,?,51,2,?,5);  Polycarp reads the second task, its difficulty is greater than dd (p2=6>d=5p2=6>d=5) and skips it without spending any time;  Polycarp reads the third task, its difficulty is not greater than dd (p3=1?d=5p3=1?d=5) and works for 11 minute (i.e. the minute 66);  Polycarp notices that he has finished m=2m=2 tasks and takes a break for 5+1=65+1=6 minutes (i.e. on the minutes 7,8,?,127,8,?,12);  Polycarp reads the fourth task, its difficulty is not greater than dd (p4=4?d=5p4=4?d=5) and works for 44 minutes (i.e. the minutes 13,14,15,1613,14,15,16);  Polycarp stops work because of t=16t=16. In total in the first test case Polycarp will complete 33 tasks for d=5d=5. He can\'t choose other value for dd to increase the number of completed tasks.'