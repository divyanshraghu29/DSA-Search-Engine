b"C. Max Mextime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputOnce Grisha found a tree (connected graph without cycles) with a root in node 11.But this tree was not just a tree. A permutation pp of integers from 00 to n?1n?1 is written in nodes, a number pipi is written in node ii.As Grisha likes to invent some strange and interesting problems for himself, but not always can solve them, you need to help him deal with two types of queries on this tree.Let's define a function MEX(S)MEX(S), where SS is a set of non-negative integers, as a smallest non-negative integer that is not included in this set.Let ll be a simple path in this tree. So let's define indices of nodes which lie on ll as u1u1, u2u2, ??, ukuk. Define V(l)V(l) as a set {pu1pu1, pu2pu2, ?? , pukpuk}. Then queries are:   For two nodes ii and jj, swap pipi and pjpj.  Find the maximum value of MEX(V(l))MEX(V(l)) in all possible ll. InputThe first line contains a single integer nn (2?n?2?1052?n?2?105)?? the number of nodes of a tree.The second line contains nn integers?? p1p1, p2p2, ??, pnpn (0?pi<n0?pi<n)?? the permutation pp, it's guaranteed that all numbers are different .The third line contains n?1n?1 integers?? d2d2, d3d3, ??, dndn (1?di<i1?di<i), where didi is a direct ancestor of node ii in a tree.The fourth line contains a single integer qq (1?q?2?1051?q?2?105)?? the number of queries.The following qq lines contain the description of queries:At the beginning of each of next qq lines, there is a single integer tt (11 or 22)?? the type of a query:   If t=1t=1, the line also contains two integers ii and jj (1?i,j?n1?i,j?n)?? the indices of nodes, where values of the permutation should be swapped.  If t=2t=2, you need to find the maximum value of MEX(V(l))MEX(V(l)) in all possible ll.  OutputFor each type 2 query print a single integer?? the answer for this query.ExamplesInputCopy6, 2 5 0 3 1 4, 1 1 3 3 3, 3, 2, 1 6 3, 2, OutputCopy3, 2, InputCopy6, 5 2 1 4 3 0, 1 1 1 3 3, 9, 2, 1 5 3, 2, 1 6 1, 2, 1 4 2, 2, 1 1 6, 2, OutputCopy3, 2, 4, 4, 2, NoteNumber written in brackets is a permutation value of a node.    In the first example, for the first query, optimal path is a path from node 11 to node 55. For it, set of values is {0,1,2}{0,1,2} and MEXMEX is 33.    For the third query, optimal path is a path from node 55 to node 66. For it, set of values is {0,1,4}{0,1,4} and MEXMEX is 22.    In the second example, for the first query, optimal path is a path from node 22 to node 66. For it, set of values is {0,1,2,5}{0,1,2,5} and MEXMEX is 33.    For the third query, optimal path is a path from node 55 to node 66. For it, set of values is {0,1,3}{0,1,3} and MEXMEX is 22.    For the fifth query, optimal path is a path from node 55 to node 22. For it, set of values is {0,1,2,3}{0,1,2,3} and MEXMEX is 44.    For the seventh query, optimal path is a path from node 55 to node 44. For it, set of values is {0,1,2,3}{0,1,2,3} and MEXMEX is 44.    For the ninth query, optimal path is a path from node 66 to node 55. For it, set of values is {0,1,3}{0,1,3} and MEXMEX is 22. "