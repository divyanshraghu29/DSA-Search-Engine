b"C. Coffee Breaktime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputRecently Monocarp got a job. His working day lasts exactly mm minutes. During work, Monocarp wants to drink coffee at certain moments: there are nn minutes a1,a2,?,ana1,a2,?,an, when he is able and willing to take a coffee break (for the sake of simplicity let's consider that each coffee break lasts exactly one minute). However, Monocarp's boss doesn't like when Monocarp takes his coffee breaks too often. So for the given coffee break that is going to be on minute aiai, Monocarp must choose the day in which he will drink coffee during the said minute, so that every day at least dd minutes pass between any two coffee breaks. Monocarp also wants to take these nn coffee breaks in a minimum possible number of working days (he doesn't count days when he is not at work, and he doesn't take coffee breaks on such days). Take into account that more than dd minutes pass between the end of any working day and the start of the following working day.For each of the nn given minutes determine the day, during which Monocarp should take a coffee break in this minute. You have to minimize the number of days spent. InputThe first line contains three integers nn, mm, dd (1?n?2?105,n?m?109,1?d?m)(1?n?2?105,n?m?109,1?d?m)?? the number of coffee breaks Monocarp wants to have, the length of each working day, and the minimum number of minutes between any two consecutive coffee breaks.The second line contains nn distinct integers a1,a2,?,ana1,a2,?,an (1?ai?m)(1?ai?m), where aiai is some minute when Monocarp wants to have a coffee break.OutputIn the first line, write the minimum number of days required to make a coffee break in each of the nn given minutes. In the second line, print nn space separated integers. The ii-th of integers should be the index of the day during which Monocarp should have a coffee break at minute aiai. Days are numbered from 11. If there are multiple optimal solutions, you may print any of them.ExamplesInputCopy4 5 33 5 1 2OutputCopy33 1 1 2 InputCopy10 10 110 5 7 4 6 3 2 1 9 8OutputCopy22 1 1 2 2 1 2 1 1 2 NoteIn the first example, Monocarp can take two coffee breaks during the first day (during minutes 11 and 55, 33 minutes will pass between these breaks). One break during the second day (at minute 22), and one break during the third day (at minute 33).In the second example, Monocarp can determine the day of the break as follows: if the minute when he wants to take a break is odd, then this break is on the first day, if it is even, then this break is on the second day."