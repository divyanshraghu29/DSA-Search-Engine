b"F. The Fair Nut and Amusing Xortime limit per test4 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputThe Fair Nut has two arrays aa and bb, consisting of nn numbers. He found them so long ago that no one knows when they came to him.The Fair Nut often changes numbers in his arrays. He also is interested in how similar aa and bb are after every modification.Let's denote similarity of two arrays as the minimum number of operations to apply to make arrays equal (every operation can be applied for both arrays). If it is impossible, similarity will be equal ?1?1.Per one operation you can choose a subarray with length kk (kk is fixed), and change every element aiai, which belongs to the chosen subarray, to ai?xai?x (xx can be chosen), where ?? denotes the bitwise XOR operation. Nut has already calculated the similarity of the arrays after every modification. Can you do it?Note that you just need to calculate those values, that is you do not need to apply any operations.InputThe first line contains three numbers nn, kk and qq (1?k?n?2?1051?k?n?2?105, 0?q?2?1050?q?2?105)?? the length of the arrays, the length of the subarrays, to which the operations are applied, and the number of queries.The second line contains nn integers a1,a2,?,ana1,a2,?,an (0?ai<2140?ai<214)?? elements of array aa.The third line contains nn integers b1,b2,?,bnb1,b2,?,bn (0?bi<2140?bi<214)?? elements of array bb.Each of the next qq lines describes query and contains string ss and two integers pp and vv (1?p?n1?p?n, 0?v<2140?v<214)?? array, which this query changes (?a? or ?b? without quotes), index of changing element and its new value.OutputOn the first line print initial similarity of arrays aa and bb.On the ii-th of following qq lines print similarity of aa and bb after applying first ii modifications.ExamplesInputCopy3 3 10 4 21 2 3b 2 5OutputCopy-11InputCopy3 2 21 3 20 0 0a 1 0b 1 1OutputCopy2-12NoteIn the first sample making arrays [0,4,2][0,4,2] and [1,2,3][1,2,3] is impossible with k=3k=3. After the modification, you can apply the operation with x=1x=1 to the whole first array (its length is equal to kk), and it will be equal to the second array.In order to make arrays equal in the second sample before changes, you can apply operations with x=1x=1 on subarray [1,2][1,2] of aa and with x=2x=2 on subarray [2,3][2,3] of bb.After all queries arrays will be equal [0,3,2][0,3,2] and [1,0,0][1,0,0]. The same operations make them equal [1,2,2][1,2,2]."