b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nThere are NN points in a plane (numbered 11 through N). For each valid i, the coordinates of the i-th point are (Xi,Yi).\nWe want to remove all the points one by one; you should choose the order in which they are removed.\nWhenever a point is removed, we compute the area of the convex hull of the remaining points. Then, we define a penalty P as twice the sum of all these areas. It can be proved that P is an integer.\nLet M be the penalty of an algorithm that always greedily chooses the point that minimises the area of the convex hull of the remaining points (if there is more than one such point, the point with the smallest X-coordinate is chosen; if there is still more than one point, then the point with the smallest Y-coordinate is chosen). You are given this penalty. Your goal is to find a removal order that results in a smaller penalty.\nInput\n\nThe first line of the input contains a single integer N.\nN lines follow. For each valid i, the i-th of these lines contains two space-separated integers Xi and Yi.\nThe last line contains a single integer M.\n\nOutput\nPrint a single line containing N space-separated integers \xe2\x80\x95 a permutation of the integers 1 through N denoting the points in the order in which they should be removed.\nConstraints\n\nN=1024\n0\xe2\x89\xa4Xi,Yi\xe2\x89\xa4512 for each valid i\n\nExample Input\n6\n1 0\n0 0\n0 1\n1 2\n2 1\n1 1\n5\n\nExample Output\n5 2 3 1 4 6\n\nExplanation\nThe points 1 through 6 are marked A through F in the following figure.\n\n\nAfter removing the point marked E, the convex hull of the remaining points is the quadrilateral ABCD.\nAfter the points B and C are also removed, the remaining points A, F and D are collinear, so the convex hull has zero area.\n\nThe penalty P is 2\xe2\x8b\x85(3/2+1+0+0+0)=5.\nTest Generation\nThere are four groups of test files and two test files in each group.\n\nIn each file in group 1, the coordinates of all points are chosen uniformly randomly and independently between 1 and 512 inclusive.\nIn each file in group 2, the points are chosen in the following way:\nConsider the square S whose lower left corner is (0,0) and upper right corner is (512,512).\nGenerate a set of points by repeating the following process:\nChoose two points P and Q with integer coordinates on the perimeter of S uniformly randomly.\nConsider all points with integer coordinates on the line segment PQ.\nSort these points first by non-decreasing X-coordinate and then by non-decreasing Y-coordinate.\nAdd these points to the set, in this order.\nThe process stops as soon as the set contains N pairwise distinct points.\nIn each file in group 3, the points are generated similarly to group 2, but the points P and Q are always chosen uniformly randomly among all points with integer coordinates inside or on the perimeter of the square S.\nIn each file in group 4, the points are generated similarly to group 2, but P is always the point (256,256).\n\nScoring\nIf P>M, you will receive the Wrong Answer verdict; otherwise, the score of a test file is M\xe2\x88\x92P. The score of a submission is the sum of scores of all test files. Your goal is to maximise the score of your submission.\nThere are eight test files. During the contest, the displayed score will account for exactly one test file from each group, i.e. your score reflects your submission's performance on 50% (4/8) of the test files. However, if your program gets a non-AC verdict on any test file, your submission's verdict will be non-AC. In other words, an AC verdict denotes that your program runs successfully on all the test files. After the end of the contest, your score will be changed to include the sum of your program's scores over the other 4 test files.\n\n\n\nAuthor:\n7\xe2\x98\x85alei\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/DYNHUL\n\n\nTags:\n\n               \n                 alei, alei, challenge-problem, dynamic-programming, greedy, heuristic, july20, randomized\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3768\n\n\nDate Added:\n15-06-2020\n\n\nTime Limit:\n5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"