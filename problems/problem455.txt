b'\nRead problems statements in Mandarin Chinese, Russian, and Bengali as well.\nConsider a string $s$. The following operation can be performed on it successively several (possibly zero) times. \n\nSelect any non empty suffix of $s$ and append it to $s$\n\nFor example, if $s = \\text{abcd}$, then $s$ can become either $\\text{abcdd}$, $\\text{abcdcd}$, $\\text{abcdbcd}$ or $\\text{abcdabcd}$ after one operation. Successive operations are now performed on the new string.\nYou are given a string $t$, the resultant string after applying several (possibly zero) operations on some string. You must find any such string $s$ of the shortest length from which $t$ can be obtained after some sequence of operations. It can be proven that such a string always exists.\nInput Format\n\nThe first line contains one number $T$, the number of test cases.\nThe only line of each test case contains the string $t$.\n\nOutput Format\nFor each test case print a string $s$ of the shortest possible length which satisfies the requirements. If there are multiple such strings, you may print any.\nConstraints\n\n$1 \\leq T \\leq 100$\n$1 \\le |t| \\le 2 \\cdot 10^5$\nString $t$ contains only lowercase english alphabets.\nThe total length of all the strings in the input is at most $2 \\cdot 10^5$.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\nabbabbbabb\nabbbabbbb\ncodechefcheff\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\nab\nab\ncodechef\n\n\nExplanation\nTest case $1$: String $\\text{ab}$ satisfies the requirements.\n$\\text{ab}$ $\\rightarrow$ $\\text{abb}$ $\\rightarrow$ $\\text{abbabb}$ $\\rightarrow$ $\\text{abbabbbabb}$\nNo string of length less than $2$ exists from which $\\text{abbabbbabb}$ can be obtained after some operations.\nTest case $2$: String $\\text{ab}$ satisfies the requirements.\n$\\text{ab}$ $\\rightarrow$ $\\text{abb}$ $\\rightarrow$ $\\text{abbb}$ $\\rightarrow$ $\\text{abbbabbb}$ $\\rightarrow$ $\\text{abbbabbbb}$\nTest case $3$: String $\\text{codechef}$ satisfies the requirements.\n$\\text{codechef}$ $\\rightarrow$ $\\text{codechefchef}$ $\\rightarrow$ $\\text{codechefcheff}$\n\n\n\nAuthor:\n7\xe2\x98\x85um_nik\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CONSSTR\n\n\nTags:\n\n               \n                 Monotonic stack, String, Suffix Automaton, Suffix Arrays, Sparse Table, Lazy Propagation, HLD, Dynamic Programming, Longest Common Prefix, DFS\n                 \n                     \n                     Data Structures, Stacks, Advanced Data Structures, Suffix Structures, Advanced Tree Structures, Segment Trees, Advanced Algorithms, Advanced Graph Algos, Algorithms, DP on sequences, Graph Algos, Traversals\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3229\n\n\nDate Added:\n19-08-2021\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'