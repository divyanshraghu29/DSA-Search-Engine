b'\nRead problems statements in Mandarin Chinese, Russian, Vietnamese, and Bengali as well.\nYou are given a tree with N vertices (numbered 1 through N) rooted at vertex 1. There are M blue tokens (numbered 1 through M) and 1 red token. For each valid i, the i-th blue token appears at the root at an integer time ti seconds and moves to a leaf vertex vi, crossing one edge per second. In the next second after reaching vi, this token disappears.\nYou control the red token. First, given a starting time S, you must choose some leaf vertex of the tree and place it at this vertex at some integer time t seconds such that t\xe2\x89\xa5S. In one second, you can move the red token to any vertex adjacent to its current vertex. Your aim is to move the red token to vertex 1.\nAt each integer moment in time, the red token is not allowed to be in the same vertex as any blue token.\nAdditionally, you have a hidden ability called K-teleport, which can be used any number of times. Whenever K-teleport is used to move the red token from its current vertex u to some vertex v of your choice (possibly u itself), it phases out of existence (so it cannot clash with any blue token) and appears in v at an integer moment in time of your choice which is at least K\xe2\x8b\x85dist(u,v) seconds later. Here, dist(u,v) denotes the shortest distance between vertices u and v.\nFind the minimum time at which the red token can reach the root without clashing with any blue token.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains four space-separated integers N, M, K and S.\nEach of the next N\xe2\x88\x921 lines contains two space-separated integers u and v denoting that vertices u and v are connected by an edge.\nM more lines follow. For each valid i, the i-th of these lines contains two space-separated integers ti and vi.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the minimum time at which you can reach the root.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4105\n2\xe2\x89\xa4N\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4M\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4K\xe2\x89\xa4109\n0\xe2\x89\xa4S\xe2\x89\xa4109\n1\xe2\x89\xa4u,v\xe2\x89\xa4N\nthe graph described on the input is a tree\n0\xe2\x89\xa4ti\xe2\x89\xa4109 for each valid i\n1\xe2\x89\xa4vi\xe2\x89\xa4N for each valid i\nvi is a leaf vertex for each valid i\nthe sum of N over all test cases does not exceed 2\xe2\x8b\x85105\nthe sum of M over all test cases does not exceed 2\xe2\x8b\x85105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n4 5 3 2\n1 2\n2 3\n2 4\n3 4\n3 3\n4 4\n5 4\n6 4\n2 1 3 0\n1 2\n1 2\n4 5 6 3\n2 1\n3 2\n4 2\n1 4\n1 3\n4 4\n5 4\n7 3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n2\n8\n\n\nExplanation\nExample case 1: One of the possible solutions is shown below.\n\nAt t=3, you may use 3-teleport from 2 to 1, arriving at vertex 1 at the time t=7, since 3\xe2\x8b\x85dist(2,1)=3 and 3+3\xe2\x89\xa47.\nExample case 2: One of the possible solutions is shown below.\n\nExample case 3: One of the possible solutions is shown below.\n\nAt t=4, you may use 6-teleport from 3 to 3, arriving at vertex 3 at the time t=6, since 6\xe2\x8b\x85dist(3,3)=0 and 4+0\xe2\x89\xa46.\n\n\n\nAuthor:\n5\xe2\x98\x85fairy_winx\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BLUECHIP\n\n\nTags:\n\n               \n                 cook127, dynamic-programming, fairy_winx, medium-hard, treap\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n9999\n\n\nDate Added:\n21-03-2021\n\n\nTime Limit:\n3.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'