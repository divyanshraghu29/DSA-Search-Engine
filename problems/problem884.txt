b"B. Spring cleaningtime limit per test1 secondmemory limit per test256 megabytesinputstandard inputoutputstandard outputSpring cleanings are probably the most boring parts of our lives, except this year, when Fl?ra and her mother found a dusty old tree graph under the carpet.This tree has NN nodes (numbered from 1 to N), connected by N?1 edges. The edges gathered too much dust, so Fl?ra's mom decided to clean them. Cleaning the edges of an arbitrary tree is done by repeating the following process:   She chooses 2 different leaves (a node is a leaf if it is connected to exactly one other node by an edge), and cleans every edge lying on the shortest path between them. If this path has d edges, then the cost of cleaning this path is d.She doesn't want to harm the leaves of the tree, so she chooses every one of them at most once. A tree is cleaned when all of its edges are cleaned. The cost of this is the sum of costs for all cleaned paths.Fl?ra thinks the tree they found is too small and simple, so she imagines Q variations of it. In the i-th variation, she adds a total of Di extra leaves to the original tree: for each new leaf, she chooses a node from the original tree, and connects that node with the new leaf by an edge. Note that some nodes may stop being leaves during this step.For all these Q variations, we are interested in the minimum cost that is required to clean the tree.InputThe first line contains two space-separated integer, N and Q (3?N?105, 1?Q?105) ? the number of nodes the tree has and the number of variations. Each of the next N?1 lines contains two space-separated integers u and v denoting that nodes u and v are connected by an edge (1?u,v?N). The next Q lines describe the variations.  The first integer in the ith line is Di (1?Di?105). Then Di space-separated integers follow: if the jth number is aj, it means that Fl?ra adds a new leaf to node aj (1?aj?N). We may add more than one leaf to the same node. ?Q1Di?105 i.e. the sum of Di in all varations is at most 105.After each variation, Fl?ra restarts and adds extra leaves to the original tree.OutputYou should print Q lines. In the i-th line, print a single integer: the minimum cost required to clean the i-th variation of the tree. If the tree cannot be cleaned, print ?1.Scoring SubtaskPointsConstraints10samples29Q=1,there is an edge between node1andifor everyi(2?i?N),Fl?ra can't add extra leaf to node139Q=1,there is an edge between nodeiandi+1for all(1?i<N),Fl?ra can't add extra leaf to node1nor nodeN416N?20000,Q?300519the original tree is a perfect binary tree rooted at node?1(i.e. each internal node has exactly?2?children, and every leafhas the same distance from the root)617Di=1for alli730no additional constraintsExampleInputCopy7 3, 1 2, 2 4, 4 5, 5 6, 5 7, 3 4, 1 4, 2 2 4, 1 1, OutputCopy-1, 10, 8, NoteThe following picture shows the second variation.  A possible solution is to clean the path between leaves 1?6, A?7 and B?3.You can download the above example and an additional (bigger) sample input here: https://gofile.io/d/8QlbsS"