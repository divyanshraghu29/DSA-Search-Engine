b"G. Array Gametime limit per test6 secondsmemory limit per test512 megabytesinputstandard inputoutputstandard outputConsider a following game between two players:There is an array b1b1, b2b2, ..., bkbk, consisting of positive integers. Initially a chip is placed into the first cell of the array, and b1b1 is decreased by 11. Players move in turns. Each turn the current player has to do the following: if the index of the cell where the chip is currently placed is xx, then he or she has to choose an index y?[x,min(k,x+m)]y?[x,min(k,x+m)] such that by>0by>0, move the chip to the cell yy and decrease byby by 11. If it's impossible to make a valid move, the current player loses the game.Your task is the following: you are given an array aa consisting of nn positive integers, and qq queries to it. There are two types of queries: 11 ll rr dd ? for every i?[l,r]i?[l,r] increase aiai by dd;  22 ll rr ? tell who is the winner of the game that is played on the subarray of aa from index ll to index rr inclusive. Assume both players choose an optimal strategy.InputThe first line contains three integers nn, mm and qq (1?n,q?2?1051?n,q?2?105, 1?m?51?m?5) ? the number of elements in aa, the parameter described in the game and the number of queries, respectively.The second line contains nn integers a1a1, a2a2, ..., anan (1?ai?10121?ai?1012) ? the elements of array aa.Then qq lines follow, each containing a query. There are two types of queries. The query of the first type is denoted by a line 11 ll rr dd (1?l?r?n1?l?r?n, 1?d?10121?d?1012) and means that for every i?[l,r]i?[l,r] you should increase aiai by dd. The query of the second type is denoted by a line 22 ll rr (1?l?r?n1?l?r?n) and means that you have to determine who will win the game if it is played on the subarray of aa from index ll to index rr (inclusive).There is at least one query of type 22.OutputFor each query of type 22 print 11 if the first player wins in the corresponding game, or 22 if the second player wins.ExamplesInputCopy5 2 4, 1 2 3 4 5, 1 3 5 6, 2 2 5, 1 1 2 3, 2 1 5, OutputCopy1, 1, InputCopy5 1 3, 1 1 3 3 4, 2 1 5, 2 2 5, 2 3 5, OutputCopy1, 2, 1, "