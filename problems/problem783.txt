b"E. Qingshan and Danieltime limit per test2 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputQingshan and Daniel are going to play a card game. But it will be so boring if only two persons play this. So they will make nn robots in total to play this game automatically. Robots made by Qingshan belong to the team 11, and robots made by Daniel belong to the team 2. Robot i belongs to team ti. Before the game starts, ai cards are given for robot i.The rules for this card game are simple:   Before the start, the robots are arranged in a circle in the order or their indices. The robots will discard cards in some order, in each step one robot discards a single card. When the game starts, robot 1 will discard one of its cards. After that, robots will follow the following rules:  If robot i discards the card last, the nearest robot whose team is opposite from i's will discard the card next. In another word j will discard a card right after i, if and only if among all j that satisfy ti?tj, dist(i,j) (definition is below) is minimum.  The robot who has no cards should quit the game immediately. This robot won't be considered in the next steps.  When no robot can discard the card next, the game ends. We define the distance from robot x to robot y as dist(x,y)=(y?x+n)modn. It is similar to the oriented distance on the circle.For example, when n=5, the distance from 1 to 3 is dist(1,3)=(3?1+5)mod5=2, the distance from 3 to 1 is dist(3,1)=(1?3+5)mod5=3.Later, Qingshan finds out that it will take so much time to see how robots play. She wants to know the result as quickly as possible. You, as Qingshan's fan, are asked to calculate an array [ans1,ans2,?,ansn]?? ansi is equal to the number of cards, that i-th robot will discard during the game. You need to hurry!To avoid the large size of the input, the team and the number of cards of each robot will be generated in your code with some auxiliary arrays.InputThe first line contains one integer n (1?n?5?106)?? the number of robots playing this game.The second line contains one integer m (1?m?min(n,200000)).Each of the next m line contains four integers pi, ki, bi, wi (1?pi?n, 1?ki?109+7, 0?bi,wi<ki). It's guaranteed that pm=n and pj?1<pj (2?j?m).Arrays aj and tj should be generated by the following pseudo code:seed = 0base = 0function rnd():\tret = seed\tseed = (seed * base + 233) mod 1000000007\treturn retp[0] = 0for i = 1 to m:\tseed = b[i]\tbase = w[i]\tfor j = p[i - 1] + 1 to p[i]:\t\tt[j] = (rnd() mod 2) + 1\t\ta[j] = (rnd() mod k[i]) + 1OutputPrint a single integer (?ni=1((ansi?i2)+1))mod109+7, where ? denotes the bitwise XOR operation.ExamplesInputCopy3, 3, 1 5 2 3, 2 7 1 2, 3 2 1 1, OutputCopy100, InputCopy5000000, 2, 1919810 998244353 114514 19260817, 5000000 233333333 623532 7175, OutputCopy800210675, InputCopy1, 1, 1 1 0 0, OutputCopy1, NoteIn the first test case a=[5,5,1] and t=[1,2,2].The robot 1 discards the card first.Then robot 2 discards the card next. Robot 3 doesn't discard the card next because dist(1,2)<dist(1,3).Then robot 1 discards the card next. Robot 3 doesn't discard the card next because t2=t3.If we write down the index of the robot who discards a card in time order, it will be the sequence [1,2,1,2,1,2,1,2]. So robots 1, 2 and 3 discard 5, 5 and 0 cards, respectively. And the answer is (((5?12)+1)?((5?22)+1)?((0?32)+1))mod109+7=(5?2?10)mod109+7=100."