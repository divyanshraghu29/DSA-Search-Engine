b"D. Sum of Medianstime limit per test3 secondsmemory limit per test256 megabytesinputstandard inputoutputstandard outputIn one well-known algorithm of finding the k-th order statistics we should divide all elements into groups of five consecutive elements and find the median of each five. A median is called the middle element of a sorted array (it's the third largest element for a group of five). To increase the algorithm's performance speed on a modern video card, you should be able to find a sum of medians in each five of the array.A sum of medians of a sorted k-element set S?=?{a1,?a2,?...,?ak}, where a1?<?a2?<?a3?<?...?<?ak, will be understood by as The  operator stands for taking the remainder, that is  stands for the remainder of dividing x by y.To organize exercise testing quickly calculating the sum of medians for a changing set was needed.InputThe first line contains number n (1???n???105), the number of operations performed.Then each of n lines contains the description of one of the three operations:   add x?? add the element x to the set;  del x?? delete the element x from the set;  sum?? find the sum of medians of the set. For any add x operation it is true that the element x is not included in the set directly before the operation.For any del x operation it is true that the element x is included in the set directly before the operation.All the numbers in the input are positive integers, not exceeding 109.OutputFor each operation sum print on the single line the sum of medians of the current set. If the set is empty, print 0.Please, do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams (also you may use the %I64d specificator).ExamplesInputCopy6add 4add 5add 1add 2add 3sumOutputCopy3InputCopy14add 1add 7add 2add 5sumadd 6add 8add 9add 3add 4add 10sumdel 1sumOutputCopy51113"