b"\nRead problems statements Mandarin , Bengali , Hindi , Russian and Vietnamese as well.\nNadaca is a country with N cities. These cities are numbered 1 through N and connected by M bidirectional roads. Each city can be reached from every other city using these roads.\nInitially, Ryan is in city 1. At each of the following K seconds, he may move from his current city to an adjacent city (a city connected by a road to his current city) or stay at his current city. Ryan also has Q conditions (a_1, b_1), (a_2, b_2), \\ldots, (a_Q, b_Q) meaning that during this K-second trip, for each valid i, he wants to be in city a_i after exactly b_i seconds.\nSince you are very good with directions, Ryan asked you to tell him how many different trips he could make while satisfying all conditions. Compute this number modulo 10^9 + 7. A trip is a sequence of Ryan's current cities after 1, 2, \\ldots, K seconds.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains three space-separated integers N, M and K.\nEach of the next M lines contains two space-separated integers u and v denoting a road between cities u and v.\nThe next line contains a single integer Q.\nQ lines follow. For each i (1 \\le i \\le Q), the i-th of these lines contains two space-separated integers a_i and b_i.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x94 the number of trips Ryan can make, modulo 10^9+7.\nConstraints\n\n1 \\le T \\le 50\n1 \\le N, M, K, Q \\le 9,000\n1 \\le u_i, v_i \\le N for each valid i\nu_i \\neq v_i for each valid i\nthere is at most one road between each pair of cities\neach city is reachable from every other city\n1 \\le a_i \\le N for each valid i\n0 \\le b_i \\le K for each valid i\nthe sum of N over all test cases does not exceed 9,000\nthe sum of K over all test cases does not exceed 9,000\nthe sum of M over all test cases does not exceed 9,000\nthe sum of Q over all test cases does not exceed 9,000\n\nSubtasks\nSubtask #1 (20 points):\n\nthe sum of N over all test cases does not exceed 400\nthe sum of K over all test cases does not exceed 400\nthe sum of M over all test cases does not exceed 400\nthe sum of Q over all test cases does not exceed 400\n\nSubtask #2 (80 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n4 3 3\n1 2\n1 3\n1 4\n0\n4 3 3\n1 2\n1 3\n1 4\n1\n2 2\n4 3 3\n1 2\n1 3\n1 4\n1\n2 1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n28\n4\n6\n\n\n\n\n\nAuthor:\n7\xe2\x98\x85watcher\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/WNDR\n\n\nTags:\n\n               \n                 Dynamic Programming, Graph Algos\n                 \n                     \n                     Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2526\n\n\nDate Added:\n20-01-2019\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"